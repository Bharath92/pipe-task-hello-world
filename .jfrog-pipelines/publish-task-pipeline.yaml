template: true
valuesFilePath: ./values.yml

resources:
  - name: hello_world_task_publish_gitrepo
    type: GitRepo
    configuration:
      path: {{ .Values.repoPath }}
      gitProvider: {{ .Values.gitIntegration }}
      branches:
        include: ^{{ .Values.mainBranch }}$
      cloneProtocol: https

pipelines:
  - name: hello_world_task_publish
    configuration:
      jfrogCliVersion: 2
      runtime:
        type: image
        image:
          custom:
            name: releases-docker.jfrog.io/jfrog/pipelines-u18node
            tag: "16"
            autoPull: true
      environmentVariables:
        readOnly:
          TASK_NAME: hello-world
          TASK_VERSION: 0.0.0
          TASK_REPOSITORY: pipelines-tasks-local
          RESOLVE_REPO: npm-virtual
    steps:
      - name: build_and_publish_task
        type: Bash
        configuration:
          inputResources:
            - name: hello_world_task_publish_gitrepo
              trigger: false
          integrations:
            - name: {{ .Values.artIntegration }}
        execution:
          onExecute:
            # Make sure version was provided
            - test -n "$TASK_VERSION" -a "$TASK_VERSION" != "0.0.0"

            - pushd $res_hello_world_task_publish_gitrepo_resourcePath
            # Configure JFrog CLI
            - jfrog npmc --repo-resolve $RESOLVE_REPO
            # Install npm dependencies
            - jfrog npm install
            # Build task runnable script bundled with dependencies
            - npm run dist
            - popd

            # Create task package content
            - mkdir $JFROG_STEP_WORKSPACE_DIR/$TASK_NAME
            # Copy task.yml
            - cp $res_hello_world_task_publish_gitrepo_resourcePath/task.yml $JFROG_STEP_WORKSPACE_DIR/$TASK_NAME
            # Copy README.md
            - cp $res_hello_world_task_publish_gitrepo_resourcePath/README.md $JFROG_STEP_WORKSPACE_DIR/$TASK_NAME
            # Copy dist folder
            - cp -r $res_hello_world_task_publish_gitrepo_resourcePath/dist $JFROG_STEP_WORKSPACE_DIR/$TASK_NAME
            - echo "Task content" && ls -la $JFROG_STEP_WORKSPACE_DIR/$TASK_NAME

            # Run publish task
            - task: jfrog/publish-task@v0.0.1
              id: publish-hello-world
              input:
                path: $JFROG_STEP_WORKSPACE_DIR/$TASK_NAME
                rtRepository: $TASK_REPOSITORY
                taskName: $TASK_NAME
                version: $TASK_VERSION

      - name: test_published_task
        type: Bash
        configuration:
          inputSteps:
            - name: build_and_publish_task
          integrations:
            - name: {{ .Values.artIntegration }}
        execution:
          onExecute:
            # Run task
            - task: $TASK_NAME@v$TASK_VERSION
              id: hello_world_test
              input:
                name: "developer"

            # Check task output
            - echo "task output is $OUT_hello_world_test_greeting"
            # Check exported environment variable
            - echo "path to greeting file is $GREETING_FILE"
            # Check task generated file
            - cat ./greeting.txt
          onComplete:
            - echo "Step done!"
  - name: install_nodejs_task_publish
    configuration:
      jfrogCliVersion: 2
      runtime:
        type: image
        image:
          custom:
            name: releases-docker.jfrog.io/jfrog/pipelines-u18node
            tag: "16"
            autoPull: true
      environmentVariables:
        readOnly:
          TASK_NAME: install-nodejs
          TASK_VERSION: 0.0.${run_number}
          TASK_REPOSITORY: pipelines-tasks-local
          RESOLVE_REPO: npm-virtual
    steps:
      - name: build_and_publish_task
        type: Bash
        configuration:
          inputResources:
            - name: hello_world_task_publish_gitrepo
              trigger: false
          integrations:
            - name: {{ .Values.artIntegration }}
        execution:
          onExecute:
            # Create task package content
            - mkdir $JFROG_STEP_WORKSPACE_DIR/$TASK_NAME
            # Copy task.yml
            - cp $res_hello_world_task_publish_gitrepo_resourcePath/tasks/$TASK_NAME/task.yml $JFROG_STEP_WORKSPACE_DIR/$TASK_NAME
            - echo "Task content" && ls -la $JFROG_STEP_WORKSPACE_DIR/$TASK_NAME
            # Run publish task
            - task: jfrog/publish-task@v0.0.1
              id: publish-hello-world
              input:
                path: $JFROG_STEP_WORKSPACE_DIR/$TASK_NAME
                rtRepository: $TASK_REPOSITORY
                taskName: $TASK_NAME
                version: $TASK_VERSION

      - name: test_published_task
        type: Bash
        configuration:
          inputSteps:
            - name: build_and_publish_task
          integrations:
            - name: {{ .Values.artIntegration }}
        execution:
          onExecute:
            # Run task
            - task: $TASK_NAME@v$TASK_VERSION
              input:
                version: "19.0.0"
            - node -v
  - name: whatsapp_task_publish
    configuration:
      jfrogCliVersion: 2
      runtime:
        type: image
        image:
          custom:
            name: releases-docker.jfrog.io/jfrog/pipelines-u18node
            tag: "16"
            autoPull: true
      environmentVariables:
        readOnly:
          TASK_NAME: whatsapp-task
          TASK_VERSION: 0.0.${run_number}
          TASK_REPOSITORY: pipelines-tasks-local
          RESOLVE_REPO: npm-virtual
    steps:
      - name: build_and_publish_task
        type: Bash
        configuration:
          inputResources:
            - name: hello_world_task_publish_gitrepo
              trigger: false
          integrations:
            - name: {{ .Values.artIntegration }}
        execution:
          onExecute:
            - mkdir $JFROG_STEP_WORKSPACE_DIR/$TASK_NAME
            - cp -rf $res_hello_world_task_publish_gitrepo_resourcePath/tasks/$TASK_NAME/* $JFROG_STEP_WORKSPACE_DIR/$TASK_NAME
            - echo "Task content" && ls -la $JFROG_STEP_WORKSPACE_DIR/$TASK_NAME
            - task: jfrog/publish-task@v0.0.1
              id: publish-hello-world
              input:
                path: $JFROG_STEP_WORKSPACE_DIR/$TASK_NAME
                rtRepository: $TASK_REPOSITORY
                taskName: $TASK_NAME
                version: $TASK_VERSION

      - name: test_published_task
        type: Bash
        configuration:
          inputSteps:
            - name: build_and_publish_task
          integrations:
            - name: {{ .Values.artIntegration }}
            - name: whatsapp
        execution:
          onExecute:
            # Run task
            - |
              export message="Hi from run number $run_number, from step: $step_url"
              export id="$int_whatsapp_id"
              export token="$int_whatsapp_token"
              export number="$int_whatsapp_number"
              echo $message
              echo $id
              echo $token
              echo $number
            - task: $TASK_NAME@v$TASK_VERSION
              input:
                phone-number-id: "$id"
                token: "$token"
                to: "$number"
                message: "$message"
